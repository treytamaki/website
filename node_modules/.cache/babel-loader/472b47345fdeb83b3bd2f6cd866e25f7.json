{"ast":null,"code":"import _classCallCheck from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/treytamaki/Desktop/sandbox/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'; // import logo from './logo.svg';\n\nimport './App.css';\nimport facebookIcon from './icons/facebook.png';\nimport githubIcon from './icons/github.png';\nimport linkedinIcon from './icons/linkedin.png';\nimport wordpressIcon from './icons/wordpress.png';\nimport MusicBox from \"./MusicBox.js\";\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nvar MORE_MUSIC = 9;\nvar TYPE_SPEED = 200; // import lorde from \"pure-heroine.jpg\";\n// import square2 from \".square-two.png\";\n// import saturation3 from \".saturation-iii.jpg\";\n// import interstellar from \".interstellar.jpg\";\n// import nvdes from \".nvdes  .jpg\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      musicBox: [],\n      phrase: \"Welcome\" //\"Welcome!\"\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.typeAnimation(0);\n    }\n  }, {\n    key: \"calculateAlbumGrid\",\n    value: function calculateAlbumGrid() {\n      var columnPercentage = 100 / Math.sqrt(MORE_MUSIC);\n      var columnPercentageStatement = \"\";\n\n      for (var i = 0; i < Math.floor(Math.sqrt(MORE_MUSIC)); i++) {\n        columnPercentageStatement += columnPercentage + \"% \";\n      }\n\n      var box = document.getElementById(\"music-div\");\n      box.setAttribute(\"style\", \"grid-template-columns:\" + columnPercentageStatement);\n    }\n  }, {\n    key: \"typeAnimation\",\n    value: function typeAnimation(i) {\n      var _this2 = this;\n\n      var phrases = [\"Howdy\", \"Aloha\", \"Hola\", \"Hello\", \"こんにちは\", \"Hallo\", \"Bonjour\", \"שלום\", \"Ciao\", \"안녕하세요\", \"你好\", \"สวัสดี\", \"Привет\", \"Καλημέρα\", \"नमस्ते\", \"مرحبا\"];\n      var p = document.getElementById(\"type-animation\");\n\n      if (p) {\n        var txt = this.state.phrase;\n\n        if (i < txt.length) {\n          p.innerText += \"\" + txt.charAt(i);\n          i++;\n          setTimeout(function () {\n            return _this2.typeAnimation(i);\n          }, TYPE_SPEED);\n        } else if (i <= txt.length * 2) {\n          var subtractIndex = i - txt.length;\n          p.innerText = txt.substring(0, txt.length - subtractIndex);\n          i++;\n          setTimeout(function () {\n            return _this2.typeAnimation(i);\n          }, TYPE_SPEED);\n        } else {\n          var randomPhrase = Math.floor(Math.random() * phrases.length);\n          this.setState({\n            phrase: phrases[randomPhrase]\n          });\n          this.typeAnimation(0);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cover-image-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"type-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"type-animation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Hello!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"My name is Trey Tamaki! I am a fourth-year student at the University of Washington, Seattle Campus.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"I am getting my B.S. in Computer Science with a minor in Art History with an intended graduation in Spring 2020.\")), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/treytamaki/Desktop/sandbox/src/App.js"],"names":["React","Component","Route","Link","BrowserRouter","Router","facebookIcon","githubIcon","linkedinIcon","wordpressIcon","MusicBox","Header","Footer","MORE_MUSIC","TYPE_SPEED","App","props","state","musicBox","phrase","typeAnimation","columnPercentage","Math","sqrt","columnPercentageStatement","i","floor","box","document","getElementById","setAttribute","phrases","p","txt","length","innerText","charAt","setTimeout","subtractIndex","substring","randomPhrase","random","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\n\n// import logo from './logo.svg';\nimport './App.css';\nimport facebookIcon from './icons/facebook.png';\nimport githubIcon from './icons/github.png';\nimport linkedinIcon from './icons/linkedin.png';\nimport wordpressIcon from './icons/wordpress.png';\n\nimport MusicBox from \"./MusicBox.js\";\n\nimport Header from './Header.js';\nimport Footer from './Footer.js';\n\nconst MORE_MUSIC = 9;\n\nconst TYPE_SPEED = 200;\n\n// import lorde from \"pure-heroine.jpg\";\n// import square2 from \".square-two.png\";\n// import saturation3 from \".saturation-iii.jpg\";\n// import interstellar from \".interstellar.jpg\";\n// import nvdes from \".nvdes  .jpg\";\n\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      musicBox: [],\n      phrase: \"Welcome\"//\"Welcome!\"\n    }\n  }\n  \n  componentDidMount() {\n    this.typeAnimation(0);\n  }\n  \n  calculateAlbumGrid() {\n    let columnPercentage = 100 / Math.sqrt(MORE_MUSIC);\n    let columnPercentageStatement = \"\";\n    for (let i = 0; i < Math.floor(Math.sqrt(MORE_MUSIC)); i++ ) {\n      columnPercentageStatement += columnPercentage + \"% \";\n    }\n    let box = document.getElementById(\"music-div\");\n    box.setAttribute(\"style\",\"grid-template-columns:\" + columnPercentageStatement);\n  }\n\n  typeAnimation(i) {\n    let phrases = [\"Howdy\", \"Aloha\", \"Hola\", \"Hello\", \"こんにちは\", \"Hallo\", \"Bonjour\", \"שלום\", \"Ciao\", \"안녕하세요\", \"你好\", \"สวัสดี\", \"Привет\", \"Καλημέρα\", \"नमस्ते\", \"مرحبا\"];\n    let p = document.getElementById(\"type-animation\");\n    if (p) {\n      let txt = this.state.phrase;\n      if (i < txt.length) {\n        p.innerText += \"\" + txt.charAt(i);\n        i++;\n        setTimeout(() => this.typeAnimation(i)\n        , TYPE_SPEED);\n      } else if (i <= txt.length * 2) {\n        let subtractIndex = i - txt.length;\n        p.innerText = txt.substring(0, txt.length - subtractIndex);\n        i++;\n        setTimeout(() => this.typeAnimation(i)\n        , TYPE_SPEED);\n      } else {\n        let randomPhrase = Math.floor(Math.random() * phrases.length);\n        this.setState({phrase: phrases[randomPhrase]});\n        this.typeAnimation(0); \n      }\n    }\n  }\n\n\n\n\n  render() {\n    \n    return (\n      \n      <div>\n        <Header></Header>\n        <div className=\"cover-image-box\">\n           <div id=\"type-block\">\n              <h1 id=\"type-animation\"></h1>\n           </div>\n        </div>\n        <br></br>\n\n        <div className=\"body\">\n          <h3>Hello!</h3>\n          <p>My name is Trey Tamaki! I am a fourth-year student at the University of Washington, Seattle Campus.</p>\n          <p>I am getting my B.S. in Computer Science with a minor in Art History with an intended graduation in Spring 2020.</p>\n        </div>\n        \n        <Footer></Footer>\n      </div>\n    ); \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}