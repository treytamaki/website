{"ast":null,"code":"import _classCallCheck from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/treytamaki/Desktop/sandbox/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/treytamaki/Desktop/sandbox/src/MusicBox.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport $ from \"jquery\";\n\nvar MusicBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MusicBox, _Component);\n\n  function MusicBox(props) {\n    var _this;\n\n    _classCallCheck(this, MusicBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MusicBox).call(this, props));\n    _this.state = {\n      player: null\n    };\n    return _this;\n  }\n\n  _createClass(MusicBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var playId = \"#\" + \"play\" + this.props.index;\n      var id = \"#\" + \"video\" + this.props.index;\n      $(document).ready(function () {\n        $(id)[0].src += \"&autoplay=1\";\n      });\n    } // //     // this function gets called when API is ready to use\n    // onYouTubeIframeAPIReady() {\n    //     // create the global player from the specific iframe (#video)\n    //     this.state.player = new YT.Player('video', {\n    //     events: {\n    //         // call this function when player is ready to use\n    //         'onReady': onPlayerReady\n    //     }\n    //     });\n    // }\n\n  }, {\n    key: \"start\",\n    value: function start(playId, id) {\n      playId = \"#\" + playId;\n      id = \"#\" + id;\n      $(document).ready(function () {\n        $(playId).on('click', function (ev) {\n          $(id)[0].src += \"&autoplay=1\";\n          ev.preventDefault();\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // youtubeLink = https://www.youtube.com/watch?v=nEqiOT_-Z_o\n      var embedLink = this.props.youtubeLink.substring(0, 23) + \"/embed/\" + this.props.youtubeLink.substring(32) + \"?rel=0\"; // youtubeLink = https://www.youtube.com/embed/nEqiOT_-Z_o?rel=0\n\n      var playId = \"play\" + this.props.index;\n      var id = \"video\" + this.props.index;\n      return React.createElement(\"div\", {\n        id: \"album-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.start(playId, id);\n        },\n        id: playId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"START\"), React.createElement(\"img\", {\n        className: \"album-art\",\n        src: this.props.albumImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"iframe\", {\n        width: \"300\",\n        height: \"300\",\n        src: embedLink,\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MusicBox;\n}(Component);\n\nexport default MusicBox;","map":{"version":3,"sources":["/Users/treytamaki/Desktop/sandbox/src/MusicBox.js"],"names":["React","Component","$","MusicBox","props","state","player","playId","index","id","document","ready","src","on","ev","preventDefault","embedLink","youtubeLink","substring","start","albumImage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AAEA,OAAOC,CAAP,MAAc,QAAd;;IAGMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAFiB;AAKlB;;;;wCAEkB;AAEf,UAAIC,MAAM,GAAG,MAAM,MAAN,GAAe,KAAKH,KAAL,CAAWI,KAAvC;AACA,UAAIC,EAAE,GAAG,MAAM,OAAN,GAAgB,KAAKL,KAAL,CAAWI,KAApC;AACAN,MAAAA,CAAC,CAACQ,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAW;AACvBT,QAAAA,CAAC,CAACO,EAAD,CAAD,CAAM,CAAN,EAASG,GAAT,IAAgB,aAAhB;AACL,OAFD;AAGH,K,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;0BAIML,M,EAAQE,E,EAAI;AACdF,MAAAA,MAAM,GAAG,MAAMA,MAAf;AACAE,MAAAA,EAAE,GAAG,MAAMA,EAAX;AACAP,MAAAA,CAAC,CAACQ,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAW;AACzBT,QAAAA,CAAC,CAACK,MAAD,CAAD,CAAUM,EAAV,CAAa,OAAb,EAAsB,UAASC,EAAT,EAAa;AACjCZ,UAAAA,CAAC,CAACO,EAAD,CAAD,CAAM,CAAN,EAASG,GAAT,IAAgB,aAAhB;AACAE,UAAAA,EAAE,CAACC,cAAH;AACD,SAHD;AAIH,OALD;AAMH;;;6BAEQ;AAAA;;AACL;AACA,UAAIC,SAAS,GAAG,KAAKZ,KAAL,CAAWa,WAAX,CAAuBC,SAAvB,CAAiC,CAAjC,EAAoC,EAApC,IAA0C,SAA1C,GAAsD,KAAKd,KAAL,CAAWa,WAAX,CAAuBC,SAAvB,CAAiC,EAAjC,CAAtD,GAA6F,QAA7G,CAFK,CAGL;;AACA,UAAIX,MAAM,GAAG,SAAS,KAAKH,KAAL,CAAWI,KAAjC;AACA,UAAIC,EAAE,GAAG,UAAU,KAAKL,KAAL,CAAWI,KAA9B;AACA,aACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACW,KAAL,CAAWZ,MAAX,EAAmBE,EAAnB,CAAN;AAAA,SAAjB;AAA+C,QAAA,EAAE,EAAEF,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWgB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAMY;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,MAAM,EAAC,KAA3B;AAAiC,QAAA,GAAG,EAAEJ,SAAtC;AAAiD,QAAA,EAAE,EAAEP,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANZ,CADJ;AAYH;;;;EA7DkBR,S;;AAgEvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport $ from \"jquery\";\n\n\nclass MusicBox extends Component {\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        player: null,\n      }\n    }\n\n    componentDidMount(){\n        \n        let playId = \"#\" + \"play\" + this.props.index;\n        let id = \"#\" + \"video\" + this.props.index;\n        $(document).ready(function() {\n              $(id)[0].src += \"&autoplay=1\";\n        });\n    }\n\n    \n    // //     // this function gets called when API is ready to use\n    // onYouTubeIframeAPIReady() {\n    //     // create the global player from the specific iframe (#video)\n    //     this.state.player = new YT.Player('video', {\n    //     events: {\n    //         // call this function when player is ready to use\n    //         'onReady': onPlayerReady\n    //     }\n    //     });\n    // }\n\n    \n\n    start(playId, id) {\n        playId = \"#\" + playId;\n        id = \"#\" + id;\n        $(document).ready(function() {\n            $(playId).on('click', function(ev) {\n              $(id)[0].src += \"&autoplay=1\";\n              ev.preventDefault();\n            });\n        });\n    }\n\n    render() {\n        // youtubeLink = https://www.youtube.com/watch?v=nEqiOT_-Z_o\n        let embedLink = this.props.youtubeLink.substring(0, 23) + \"/embed/\" + this.props.youtubeLink.substring(32) + \"?rel=0\";\n        // youtubeLink = https://www.youtube.com/embed/nEqiOT_-Z_o?rel=0\n        let playId = \"play\" + this.props.index;\n        let id = \"video\" + this.props.index;\n        return(\n            <div id=\"album-box\">\n                <button onClick={() => this.start(playId, id)} id={playId}>START</button>\n                <img className=\"album-art\" src={this.props.albumImage}></img>\n                <br></br>\n                {/* <div style={{position:\"relative\",width:\"62px\", height:\"50px\", overflow:\"hidden\", display:\"inline-block\"}}>\n                    <div style={{position:\"absolute\",top:\"-266px\",left:\"-5px\"}}>     */}\n                        <iframe width=\"300\" height=\"300\" src={embedLink} id={id}></iframe>\n                    {/* </div>\n                </div> */}\n            </div>\n        );\n    }\n\n}\nexport default MusicBox;\n"]},"metadata":{},"sourceType":"module"}